@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Mtg.Blazor.Dialogs

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IDialogService DialogService

<AuthorizeView>
    <Authorized>
        <MudButton StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Primary" OnClick="OpenDeckCreationDialog">Deck</MudButton>
        <div style="flex-grow: 0.01"/>
        <MudButton StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Primary">Match</MudButton>
        <div style="flex-grow: 0.01"/>
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" OnClick="BeginSignOut">Logout</MudButton>
    </Authorized>
    <NotAuthorized>
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" HRef="@("authentication/login")">Login</MudButton>
    </NotAuthorized>
</AuthorizeView>

@code{

    private async Task OpenDeckCreationDialog()
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Small, FullWidth = true };
        await DialogService.ShowAsync<CreateDeckDialog>("Create Deck", options);
    }
    
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}